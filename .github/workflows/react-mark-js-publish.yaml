name: React Mark JS Publish

on:
  push:
    branches:
      - main

jobs:
  publish:
    # CONDITIONALLY EXECUTE JOB
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    steps:
      # CHECKOUT AND PULL CURRENT BRANCH
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          # token: ${{ secrets.GH_TOKEN }}
          ssh-key: ${{ secrets.GH_SSH_KEY }}

      # CONFIGURE GIT USER
      - name: Configure CI Git User
        run: |
          git config --global user.name '@appsparkler'
          git config --global user.email 'appsparkler@users.noreply.github.com'
          git remote set-url origin git@github.com:appsparkler/my-storybooks.git

      # SETUP NodeJS
      - name: Setup NodeJS 15.11.0
        uses: actions/setup-node@v2
        with:
          node-version: "15.11.0"

      # CACHE NODE MODULES
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: |
            ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      # INSTALL PACKAGES
      - name: Install Packages
        run: |
          yarn install --prefer-offline --frozen-lockfile
          git status

      # NPM AUTHENTICATION
      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # AVOID COMMITTING .npmrc file
      - name: Avoid committing .npmrc file
        run: |
          git status
          git update-index --assume-unchanged .npmrc

      # ADD ssh-key
      # - name: Add SSH KEY
      #   run: |
      #     echo ${}

      - name: Publish package
        # run: lerna publish --yes --message 'chore: release new versions'
        run: |
          yarn lerna publish --conventional-commits --no-verify-access -y --message "chore(release): publish %s [skip ci]"

        env:
          # GH_TOKEN: ${{ secrets.GH_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
